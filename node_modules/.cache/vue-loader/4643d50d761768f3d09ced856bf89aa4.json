{"remainingRequest":"/home/user/Documents/learn/ModalWindows/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Documents/learn/ModalWindows/src/components/ModalValidate.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/user/Documents/learn/ModalWindows/src/components/ModalValidate.vue","mtime":1606928000824},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Documents/learn/ModalWindows/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm0taXRlbSAuZXJyb3JUZXh0IHsKICBkaXNwbGF5OiBub25lOwogIG1hcmdpbi1ib3R0b206IDhweDsKICBmb250LXNpemU6IDEzLjRweDsKICBjb2xvcjogI2MwMzUzNTsKfQouZm9ybS1pdGVtIHsKICAmLmVycm9ySW5wdXQgLmVycm9yVGV4dCB7CiAgICBkaXNwbGF5OiBibG9jazsKICB9Cn0KaW5wdXQuZXJyb3IgewogIGJvcmRlci1jb2xvcjogI2MwMzUzNTsKfQo="},{"version":3,"sources":["ModalValidate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalValidate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <modal title=\"Modal with form + Validate\" @close=\"$emit('close')\">\n    <div slot=\"body\">\n      <form @submit.prevent=\"onSubmit\">\n          <!-- name -->\n        <div class=\"form-item\" :class=\"{ errorInput: $v.name.$error }\">\n          <label>Name:</label>\n          <p class=\"errorText\" v-if=\"!$v.name.required\">Fild is required!</p>\n          <p class=\"errorText\" v-if=\"!$v.name.minLength\">\n            Name must have at least {{ $v.name.$params.minLength.min }}!\n          </p>\n          <input\n            v-model=\"name\"\n            :class=\"{ error: $v.name.$error }\"\n            @change=\"$v.name.$touch()\"\n          />\n        </div>\n        <!-- email -->\n        <div class=\"form-item\" :class=\"{ errorInput: $v.email.$error }\">\n            <label>Email:</label>\n            <p class=\"errorText\" v-if=\"!$v.email.required\">Fild is required!</p>\n            <p class=\"errorText\" v-if=\"!$v.email.email\">\n                Email is not correct!\n            </p>\n            <input\n            v-model=\"email\"\n            :class=\"{ error: $v.email.$error }\"\n            @change=\"$v.email.$touch()\"\n          />\n            <button class=\"btn btnPrimary\">Submit!</button>\n        </div>\n      </form>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\n\nimport modal from \"@/components/UI/Modal.vue\";\n\nexport default {\n  components: { modal },\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n    };\n  },\n  validations: {\n    name: {\n      required,\n      minLength: minLength(4),\n    },\n    email: {\n      required,\n      email,\n    },\n  },\n  methods: {\n      onSubmit () {\n          this.$v.$touch()\n          if (!this.$v.$invalid) {\n            const user = {\n                name: this.name,\n                email: this.email\n            }\n            console.log(user)\n            this.name = ''\n            this.email = ''\n            this.$v.$reset()\n          }\n      }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.form-item .errorText {\n  display: none;\n  margin-bottom: 8px;\n  font-size: 13.4px;\n  color: #c03535;\n}\n.form-item {\n  &.errorInput .errorText {\n    display: block;\n  }\n}\ninput.error {\n  border-color: #c03535;\n}\n</style>\n"]}]}